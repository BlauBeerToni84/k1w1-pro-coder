name: tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    name: ci
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    env:
      CI: true
      NODE_VERSION: '22'
      PORT: '8080'
      ELECTRON_DISABLE_GPU: '1'
      DBUS_SESSION_BUS_ADDRESS: '/dev/null'
      NO_AT_BRIDGE: '1'
      TERM: 'xterm'
      CYPRESS_CACHE_FOLDER: ~/.cache/Cypress

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install system deps (xvfb, lsof)
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb lsof

      - name: Cache Cypress binary
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cypress-

      - name: npm ci (fallback zu npm i)
        run: npm ci || npm i

      - name: Install Buddy CLI (bdy)
        run: |
          set -eux
          if command -v bdy >/dev/null 2>&1; then exit 0; fi
          echo "deb [trusted=yes] https://es.buddy.works/bdy/apt-repo prod main" | sudo tee /etc/apt/sources.list.d/bdy.list >/dev/null
          sudo apt-get update -y
          sudo apt-get install -y bdy
          bdy --version

      - name: Port ${{ env.PORT }} freiräumen (zur Sicherheit)
        run: |
          sudo fuser -k $PORT/tcp || true
          pkill -f 'vite|node.*vite' || true
          (command -v lsof >/dev/null && lsof -tiTCP:$PORT -sTCP:LISTEN | xargs -r kill -9) || true

      - name: Check Buddy UT token via CLI
        env:
          BUDDY_UT_TOKEN: ${{ secrets.BUDDY_UT_TOKEN }}
        run: |
          set -euo pipefail
          mkdir -p reports
          echo '<testsuite name="token-check"/>' > reports/token-check.xml
          bdy tests upload --format junit-xml reports/token-check.xml

      - name: Vitest ausführen + Buddy-Upload
        env:
          BUDDY_UT_TOKEN: ${{ secrets.BUDDY_UT_TOKEN }}
        run: |
          mkdir -p reports
          npx vitest run --reporter=junit --outputFile=reports/junit.xml
          bash ./scripts/buddyupload.sh reports/junit.xml || true

      - name: Cypress e2e (Electron, headless) + Buddy-Upload
        env:
          BUDDY_UT_TOKEN: ${{ secrets.BUDDY_UT_TOKEN }}
        run: |
          npx --yes start-server-and-test \
            "bash -lc 'curl -sf http://127.0.0.1:$PORT/@vite/client || npm run dev -- --port $PORT --strictPort'" \
            http://127.0.0.1:$PORT/@vite/client \
            "xvfb-run -a npx cypress run --e2e --browser electron --reporter junit --reporter-options mochaFile=reports/cypress-[hash].xml,toConsole=false"
          bash ./scripts/buddyupload.sh reports/cypress-*.xml || true

      - name: Upload JUnit artifacts
        uses: actions/upload-artifact@v4
        with:
          name: junit-reports
          path: reports/*.xml
          if-no-files-found: warn
