name: android-release
on: [workflow_dispatch]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '21' }

      - name: Install Android SDK + build-tools
        run: |
          ANDROID_SDK_ROOT="$HOME/Android/Sdk"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> "$GITHUB_ENV"
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd /tmp
          curl -sSLo cmdline.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdline.zip
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          mv cmdline-tools/* "$ANDROID_SDK_ROOT/cmdline-tools/latest/"
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH"
          yes | sdkmanager --licenses
          sdkmanager --install "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      - name: Prepare Capacitor (fresh android)
        run: |
          npm ci
          npm run build
          rm -rf android
          npx cap add android
          npx cap sync android

      - name: Bump Gradle wrapper & Flags
        run: |
          sed -i 's#^distributionUrl=.*#distributionUrl=https\://services.gradle.org/distributions/gradle-8.9-bin.zip#' android/gradle/wrapper/gradle-wrapper.properties || true
          {
            echo "org.gradle.jvmargs=-Xmx3g -Dfile.encoding=UTF-8"
            echo "android.useAndroidX=true"
            echo "android.enableJetifier=true"
          } >> android/gradle.properties

      - name: Patch release buildType (kein Shrink/ProGuard)
        run: |
          sed -i 's/minifyEnabled true/minifyEnabled false/g' android/app/build.gradle || true
          sed -i 's/shrinkResources true/shrinkResources false/g' android/app/build.gradle || true

      - name: Build unsigned release
        run: ./android/gradlew :app:assembleRelease --no-daemon --stacktrace --info

      - name: Align & sign APK
        if: ${{ success() }}
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/app/release.jks
          BT="$HOME/Android/Sdk/build-tools/35.0.0"
          APKU=android/app/build/outputs/apk/release/app-release-unsigned.apk
          "$BT/zipalign" -p -f 4 "$APKU" app-release-aligned.apk
          "$BT/apksigner" sign --ks android/app/release.jks --ks-key-alias "$ANDROID_KEY_ALIAS" \
            --ks-pass pass:"$ANDROID_KEYSTORE_PASSWORD" --key-pass pass:"$ANDROID_KEY_PASSWORD" \
            --out app-release-signed.apk app-release-aligned.apk
          "$BT/apksigner" verify --print-certs app-release-signed.apk

      - name: Upload signed APK
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: apk-release
          path: app-release-signed.apk

      - name: Upload Gradle logs (always)
        if: always()
        run: |
          tar -czf gradle-logs.tgz android/.gradle || true
        uses: actions/upload-artifact@v4
        with:
          name: release-logs
          if-no-files-found: ignore
          path: gradle-logs.tgz
