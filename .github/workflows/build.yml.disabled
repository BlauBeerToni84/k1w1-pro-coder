
name: build

on:
  push: { branches: [main] }
  pull_request: { branches: [main] }
  workflow_dispatch:

permissions: { contents: read }

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '22'
  PORT: '5173'
  ELECTRON_DISABLE_GPU: '1'
  DBUS_SESSION_BUS_ADDRESS: '/dev/null'
  NO_AT_BRIDGE: '1'
  TERM: 'xterm'
  CYPRESS_CACHE_FOLDER: ~/.cache/Cypress

jobs:
  tests:
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install system deps (xvfb, lsof)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y xvfb lsof

      - name: Install deps
        run: npm ci || npm i

      - name: Run Vitest (JUnit)
        run: |
          mkdir -p reports
          npx vitest run --reporter=junit --outputFile=reports/junit.xml || true

      - name: Run Cypress (Electron, headless)
        env:
          PORT: ${{ env.PORT }}
        run: |
          npx --yes start-server-and-test \
            "npm run dev -- --port $PORT --strictPort" \
            http://127.0.0.1:$PORT/@vite/client \
            "xvfb-run -a npx cypress run --e2e --browser electron"

      - name: Upload JUnit artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-reports
          path: reports/**/*.xml
          if-no-files-found: warn

      - name: Buddy upload (optional)
        if: always()
        env:
          BUDDY_UT_TOKEN: ${{ secrets.BUDDY_UT_TOKEN }}
        run: |
          set -euo pipefail
          if ! command -v bdy >/dev/null 2>&1; then
            echo "deb [trusted=yes] https://es.buddy.works/bdy/apt-repo prod main" | sudo tee /etc/apt/sources.list.d/bdy.list >/dev/null
            sudo apt-get update -y
            sudo apt-get install -y bdy
          fi
          shopt -s nullglob
          for f in reports/*.xml; do
            echo "Buddy: $f"
            bdy tests upload --format junit-xml "$f" || echo "WARN: Buddy-Upload fehlgeschlagen für $f"
          done

  web-build:
    needs: tests
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps
        run: npm ci || npm i

      - name: Build web app
        run: npm run build

      - name: Upload web build (dist/)
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: |
            dist/**
          if-no-files-found: error

  android-apk:
    # läuft nur, wenn ein Android-Projekt erkannt wird
    if: ${{ hashFiles('android/gradlew') != '' }}
    needs: tests
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      - name: Build APK (assembleRelease)
        working-directory: android
        env:
          # Falls du Keystore/Signatur via Secrets nutzt, hier injecten
          # z.B. ANDROID_KEYSTORE_BASE64, ANDROID_KEY_ALIAS, ...
          JAVA_TOOL_OPTIONS: -Dorg.gradle.jvmargs=-Xmx2g
        run: ./gradlew --no-daemon assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: |
            android/app/build/outputs/**/*.apk
          if-no-files-found: warn
